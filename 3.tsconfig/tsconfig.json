{
  "compilerOptions": {
    /* Visit https://aka.ms/tsconfig to read more about this file */

    /* Projects */

    /* Language and Environment */
    //
    //--Target
    //Indica la version de TypeScript que se va a utilizar
    "target": "es2016" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    //
    //--Lib
    // En este se definen los librerias necesarias para que el proyecto
    // tenga todas las librerias necesarias para su correcto funcionamiento
    //
    //Si lo descomentamos tendremos que definir todas las librerias de manera
    //manual
    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */

    /* Modules */
    "module": "commonjs" /* Specify what module code is generated. */,
    //
    // -- Entrada
    //En esta carpeta se definen los archivos de entrada o los archivos sobre los
    //cuales se compilaran los archivos de TypeScript
    //
    "rootDir": "./src/" /* Specify the root folder within your source files. */,
    /* JavaScript Support */

    // Permite anexar todos los archivos de Javascript al compiador
    // "allowJs": true,                                  /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */

    /--sourceMap
    //Nos permite depurar el codigo de TypeScript
    // Genera un archvo .map que nos permite ver el codigo de TypeScript
    // ademas de ver el codigo de JavaScript
    //
    // "sourceMap": true,                                /* Create source map files for emitted JavaScript files. */
    //
    // -- Salida
    //  Nos permite definir donde se almacenaran los archivos compilados
    //
    "outDir": "./dist/" /* Specify an output folder for all emitted files. */,
    //
    //--Comentarios
    //Este remueve comentarios de los archivos una vez compilados
    //
    "removeComments": true /* Disable emitting comments. */,
    //

    //--Errores
    //Este permite definir si queremos que TypeScript no compile si
    //encentra errores en el codigo
    //
    // "noEmitOnError": true,                            /* Disable emitting files if any type checking errors are reported. */
    //
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

    /* Type Checking */
    //
    //Define todas las opciones de type como verdaderas
    //
    "strict": true /* Enable all strict type-checking options. */,

    //Obliga a definir el tipo de las variables
    // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    //
    //Checkea de manera estricta los tipos de las variables no sean null
    // "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */

    // Nos recalca que variables fueron definidas pero no utilizadas
    // "noUnusedLocals": true,                           /* Enable error reporting when local variables aren't read. */

    // Este nos indica que parametros nos estan siendo utilizados
    // "noUnusedParameters": true,                       /* Raise an error when a function parameter isn't read. */

    // "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */

    // Este nos indica que cuando no hay un retorno definido
    // "noImplicitReturns": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */

    /* Completeness */
    // "skipDefaultLibCheck": true,                      /* Skip type checking .d.ts files that are included with TypeScript. */
    "skipLibCheck": true /* Skip type checking all .d.ts files. */
  }
  //,
  //En este se definen los archivos que de desean excluir de typeScript
  //En este se pueden indicar mas de un archivo
  //"exclude": ["./src/index2.ts"],
  //
  //En este nos permite definir e incluir los archivos que deseamos que
  //typeScript compile
  //"include": ["./src/index.ts"]
  //
  //En este tenemos que ir nombrando archivo por archivo a comparacion de
  //include donde podemos definir un patron o carpetas
  //"files": ["./src/index.ts"]
}
